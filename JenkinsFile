pipeline{
	        agent any
	
	        stages{
	
	               stage ('Test and Build'){
	
	                       steps {
	                              withMaven(maven : 'maven_3_5_4'){
	                                      sh 'mvn install'
	                              }
	                       }
	               }
	
	               stage ('SonarQube Analysis'){
	               
	                       steps{
	                       
	                              withSonarQubeEnv('SonarQubeSumit') {
	                                      sh 'mvn org.sonarsource.scanner.maven:sonar-maven-plugin:3.2:sonar'
	
	                              }
	                       }
	               }
	
	               stage ('Artifactory Deploy'){
	               
	                       steps{
	                              script {
	                                      def server = Artifactory.server('default')
	                                      def rtMaven = Artifactory.newMavenBuild()
	                                      
	                                      rtMaven.deployer server: server, releaseRepo: 'nitesh', snapshotRepo: 'nitesh'
	                                      rtMaven.tool = 'maven_3_5_4'
	                                      def buildInfo = rtMaven.run pom: 'pom.xml', goals: 'install'
	                                      server.publishBuildInfo buildInfo
	                                      }
	                       }
	               }
				}
}